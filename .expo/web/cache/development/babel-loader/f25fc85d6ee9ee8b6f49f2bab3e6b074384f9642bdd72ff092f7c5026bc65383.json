{"ast":null,"code":"import { Fragment } from \"react\";\nimport headerCurtoImg from \"../../assets/headerCurto.png\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Header = function Header() {\n  var screenWidth = Dimensions.get(\"window\").width;\n  var screenHeight = Dimensions.get(\"window\").height;\n  return _jsx(Fragment, {\n    children: _jsx(Image, {\n      source: headerCurtoImg,\n      style: {\n        width: screenWidth,\n        height: sc,\n        zIndex: 1\n      }\n    })\n  });\n};\nexport default Header;","map":{"version":3,"names":["Fragment","headerCurtoImg","Dimensions","Image","jsx","_jsx","Header","screenWidth","get","width","screenHeight","height","children","source","style","sc","zIndex"],"sources":["/Users/adriana/Desktop/padaTelaLogin/PADA-mobile/src/components/header/header.tsx"],"sourcesContent":["import { Fragment } from \"react\";\nimport headerCurtoImg from \"../../assets/headerCurto.png\"\nimport { Dimensions, Image } from \"react-native\";\n\nconst Header = () => {\n\n  const screenWidth = Dimensions.get(\"window\").width;\n  const screenHeight = Dimensions.get(\"window\").height;\n\n  return (\n    <Fragment>\n      \n        <Image\n\n          source={headerCurtoImg}\n          style={{\n            width: screenWidth, \n            height: sc,  \n            zIndex: 1,\n          \n          }}\n        />\n     \n    </Fragment>\n  );\n}\n\n  \n\n\nexport default Header;\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,cAAc;AAAoC,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGzD,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EAEnB,IAAMC,WAAW,GAAGL,UAAU,CAACM,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;EAClD,IAAMC,YAAY,GAAGR,UAAU,CAACM,GAAG,CAAC,QAAQ,CAAC,CAACG,MAAM;EAEpD,OACEN,IAAA,CAACL,QAAQ;IAAAY,QAAA,EAELP,IAAA,CAACF,KAAK;MAEJU,MAAM,EAAEZ,cAAe;MACvBa,KAAK,EAAE;QACLL,KAAK,EAAEF,WAAW;QAClBI,MAAM,EAAEI,EAAE;QACVC,MAAM,EAAE;MAEV;IAAE,CACH;EAAC,CAEI,CAAC;AAEf,CAAC;AAKD,eAAeV,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}