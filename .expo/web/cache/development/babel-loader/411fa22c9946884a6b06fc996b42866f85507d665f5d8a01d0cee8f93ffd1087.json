{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { ButtonViewCheckBox, Check, TitleCheck, ContainerViewCheckBox } from \"./checkBox-style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CheckBox = function CheckBox() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    checked = _useState2[0],\n    setChecked = _useState2[1];\n  var handleCheckbox = function handleCheckbox() {\n    setChecked(!checked);\n  };\n  return _jsx(ContainerViewCheckBox, {\n    onPress: handleCheckbox,\n    children: _jsxs(ButtonViewCheckBox, {\n      children: [_jsx(Check, {\n        checked: checked,\n        children: checked && _jsx(Icon, {\n          name: \"checkmark-outline\",\n          size: 10,\n          color: \"#fff\"\n        })\n      }), _jsx(TitleCheck, {\n        children: \"Lembrar minha escolha\"\n      })]\n    })\n  });\n};\nexport default CheckBox;","map":{"version":3,"names":["useState","Icon","ButtonViewCheckBox","Check","TitleCheck","ContainerViewCheckBox","jsx","_jsx","jsxs","_jsxs","CheckBox","_useState","_useState2","_slicedToArray","checked","setChecked","handleCheckbox","onPress","children","name","size","color"],"sources":["/Users/adriana/Desktop/padaTelaLogin/PADA-mobile/src/components/checkBox/checkBox.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport {\n  ButtonViewCheckBox,\n  Check,\n  TitleCheck,\n  ContainerViewCheckBox,\n} from \"./checkBox-style\";\n\n\nconst CheckBox = () => {\n  const [checked, setChecked] = useState(false);\n\n  const handleCheckbox = () => {\n    setChecked(!checked);\n  };\n\n  return (\n   \n        <ContainerViewCheckBox onPress={handleCheckbox}>\n          <ButtonViewCheckBox>\n            <Check checked={checked}>\n              {checked && (\n                <Icon name=\"checkmark-outline\" size={10} color=\"#fff\" />\n              )}\n            </Check>\n            <TitleCheck>Lembrar minha escolha</TitleCheck>\n          </ButtonViewCheckBox>\n        </ContainerViewCheckBox>\n        \n  );\n};\n\nexport default CheckBox;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI;AACX,SACEC,kBAAkB,EAClBC,KAAK,EACLC,UAAU,EACVC,qBAAqB;AACG,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EACrB,IAAAC,SAAA,GAA8BX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1B,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BD,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,OAEMP,IAAA,CAACF,qBAAqB;IAACY,OAAO,EAAED,cAAe;IAAAE,QAAA,EAC7CT,KAAA,CAACP,kBAAkB;MAAAgB,QAAA,GACjBX,IAAA,CAACJ,KAAK;QAACW,OAAO,EAAEA,OAAQ;QAAAI,QAAA,EACrBJ,OAAO,IACNP,IAAA,CAACN,IAAI;UAACkB,IAAI,EAAC,mBAAmB;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAM,CAAE;MACxD,CACI,CAAC,EACRd,IAAA,CAACH,UAAU;QAAAc,QAAA,EAAC;MAAqB,CAAY,CAAC;IAAA,CAC5B;EAAC,CACA,CAAC;AAGhC,CAAC;AAED,eAAeR,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}