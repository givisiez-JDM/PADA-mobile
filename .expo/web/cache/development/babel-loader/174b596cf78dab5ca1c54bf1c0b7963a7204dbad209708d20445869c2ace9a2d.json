{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Fragment, useState } from \"react\";\nimport Header from \"../../components/header/header\";\nimport { Button, ContainerFormPatient, TextButton, TitleForm } from \"./patient-record-style\";\nimport FormPatientRecord from \"../../components/form-patient-record/form-patient-record\";\nimport { validar } from \"../../config/validates\";\nimport CheckBox from \"../../components/checkbox/checkbox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PatientRecord = function PatientRecord() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    mail = _useState4[0],\n    setMail = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    pass = _useState6[0],\n    setPass = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    repeatPass = _useState8[0],\n    setRepeatPass = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    errorName = _useState10[0],\n    setErrorName = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    errorMail = _useState12[0],\n    setErrorMail = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    errorPass = _useState14[0],\n    setErrorPass = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    errorRepeatPass = _useState16[0],\n    setErrorRepeatPass = _useState16[1];\n  var _handleInputChange = function handleInputChange(name, value) {\n    if (name === \"Nome de usu치rios\") {\n      setName(value);\n      setErrorName(\"\");\n    }\n    if (name === \"E-mail\") {\n      setMail(value);\n      setErrorMail(\"\");\n    }\n    if (name === \"Senha\") {\n      setPass(value);\n      setErrorPass(\"\");\n    }\n    if (name === \"Repetir Senha\") {\n      setRepeatPass(value);\n      setErrorRepeatPass(\"\");\n    }\n  };\n  var arrayNamePlaceholder = [[\"person\", name, \"Nome de usu치rios\", errorName], [\"mail\", mail, \"E-mail\", errorMail], [\"key\", pass, \"Senha\", errorPass], [\"key\", repeatPass, \"Repetir Senha\", errorRepeatPass]];\n  var savePatient = function savePatient() {\n    if (validar({\n      name: name,\n      mail: mail,\n      pass: pass,\n      repeatPass: repeatPass\n    }, {\n      setErrorName: setErrorName,\n      setErrorMail: setErrorMail,\n      setErrorPass: setErrorPass,\n      setErrorRepeatPass: setErrorRepeatPass\n    })) {\n      console.log(\"Foi\");\n    }\n  };\n  return _jsxs(Fragment, {\n    children: [_jsx(Header, {\n      status: false\n    }), _jsxs(ContainerFormPatient, {\n      children: [_jsx(TitleForm, {\n        children: \"Crie sua conta\"\n      }), arrayNamePlaceholder.map(function (_ref, index) {\n        var _ref2 = _slicedToArray(_ref, 4),\n          icon = _ref2[0],\n          valueState = _ref2[1],\n          place = _ref2[2],\n          err = _ref2[3];\n        return _jsx(FormPatientRecord, {\n          iconName: icon,\n          placeholder: place,\n          handleInputChange: function handleInputChange(text) {\n            _handleInputChange(place, text);\n          },\n          state: valueState,\n          err: err\n        }, index);\n      }), _jsx(CheckBox, {}), _jsx(Button, {\n        onPress: function onPress() {\n          savePatient();\n        },\n        children: _jsx(TextButton, {\n          children: \"Cadastre-se\"\n        })\n      })]\n    })]\n  });\n};\nexport default PatientRecord;","map":{"version":3,"names":["Fragment","useState","Header","Button","ContainerFormPatient","TextButton","TitleForm","FormPatientRecord","validar","CheckBox","jsx","_jsx","jsxs","_jsxs","PatientRecord","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","mail","setMail","_useState5","_useState6","pass","setPass","_useState7","_useState8","repeatPass","setRepeatPass","_useState9","_useState10","errorName","setErrorName","_useState11","_useState12","errorMail","setErrorMail","_useState13","_useState14","errorPass","setErrorPass","_useState15","_useState16","errorRepeatPass","setErrorRepeatPass","handleInputChange","value","arrayNamePlaceholder","savePatient","console","log","children","status","map","_ref","index","_ref2","icon","valueState","place","err","iconName","placeholder","text","state","onPress"],"sources":["/home/joaovictor/Repositories/PADA-mobile/src/screens/patient-record/patient-record.tsx"],"sourcesContent":["import { Fragment, useState } from \"react\";\nimport Footer from \"../../components/footer/footer\";\nimport Header from \"../../components/header/header\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport {\n  Button,\n  ButtonViewCheckBox,\n  Check,\n  TitleCheck,\n  ContainerFormPatient,\n  ContainerViewCheckBox,\n  TextButton,\n  TitleForm,\n} from \"./patient-record-style\";\nimport { Text, TouchableOpacity, View } from \"react-native\";\nimport FormPatientRecord from \"../../components/form-patient-record/form-patient-record\";\nimport { validar } from \"../../config/validates\";\nimport CheckBox from \"../../components/checkbox/checkbox\";\n\ninterface PatientRecordState {\n  name: string;\n  mail: string;\n  pass: string;\n  repeatPass: string;\n}\n\nconst PatientRecord = () => {\n  const [name, setName] = useState(\"\");\n  const [mail, setMail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [repeatPass, setRepeatPass] = useState(\"\");\n  const [errorName, setErrorName] = useState(\"\");\n  const [errorMail, setErrorMail] = useState(\"\");\n  const [errorPass, setErrorPass] = useState(\"\");\n  const [errorRepeatPass, setErrorRepeatPass] = useState(\"\");\n\n  const handleInputChange = (name: string, value: string) => {\n    if (name === \"Nome de usu치rios\") {\n      setName(value);\n      setErrorName(\"\");\n    }\n    if (name === \"E-mail\") {\n      setMail(value);\n      setErrorMail(\"\");\n    }\n    if (name === \"Senha\") {\n      setPass(value);\n      setErrorPass(\"\");\n    }\n    if (name === \"Repetir Senha\") {\n      setRepeatPass(value);\n      setErrorRepeatPass(\"\");\n    }\n  };\n\n  const arrayNamePlaceholder = [\n    [\"person\", name, \"Nome de usu치rios\", errorName],\n    [\"mail\", mail, \"E-mail\", errorMail],\n    [\"key\", pass, \"Senha\", errorPass],\n    [\"key\", repeatPass, \"Repetir Senha\", errorRepeatPass],\n  ];\n\n  const savePatient = () => {\n    if (\n      validar(\n        { name, mail, pass, repeatPass },\n        { setErrorName, setErrorMail, setErrorPass, setErrorRepeatPass }\n      )\n    ) {\n      console.log(\"Foi\");\n    }\n  };\n\n  return (\n    <Fragment>\n      <Header status={false} />\n      <ContainerFormPatient>\n        <TitleForm>Crie sua conta</TitleForm>\n\n        {arrayNamePlaceholder.map(\n          ([icon, valueState, place, err], index: number) => (\n            <FormPatientRecord\n              iconName={icon}\n              placeholder={place}\n              handleInputChange={(text: string) => {\n                handleInputChange(place, text);\n              }}\n              state={valueState}\n              err={err}\n              key={index}\n            />\n          )\n        )}\n\n        <CheckBox />\n\n        <Button\n          onPress={() => {\n            savePatient();\n          }}\n        >\n          <TextButton>Cadastre-se</TextButton>\n        </Button>\n      </ContainerFormPatient>\n    </Fragment>\n  );\n};\n\nexport default PatientRecord;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}